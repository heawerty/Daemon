import numpy as np
import pandas as pd
logreturns = pd.read_csv('/home/mtroppmair/Downloads/logreturns.csv').iloc[:,1:]

#inputing tables 1 and 2
table1 = pd.DataFrame({'AA':[.1],
                       'BB':[.15],
                       'CC':[.1],
                       'DD':[.05],
                       'EE':[.05],
                       'FF':[.1],
                       'GG':[.2],
                       'HH':[.1],
                       'II':[.05],
                       'JJ':[.1],})

table2 = pd.DataFrame({'AA':[.2],
                       'BB':[.1],
                       'CC':[.1],
                       'DD':[.1],
                       'EE':[.05],
                       'FF':[.1],
                       'GG':[.05],
                       'HH':[.2],
                       'II':[.05],
                       'JJ':[.05],})

#transform logreturn to simple daily returns
returns = np.exp(logreturns)

#create arrays for daily return of portfolio and the weights
port_daily_ret = np.zeros([15,1])
weights_ = np.zeros([15,10])

#calculate the return and weight for the first day 
w = table1*returns.iloc[0,:]
port_daily_ret[0] = w.sum(axis=1)
weights_[0,:] = w/w.sum().sum()

#calcute the return and weight for the remainder days, and doing the rebalancing on day 10 according to table2
for i in range(1,15):
    if i == 10:
        w = table2*returns.iloc[10,:]
        port_daily_ret[10] = w.sum().sum()
        weights_[10,:] = w/w.sum().sum()
    else:
        w = weights_[i-1,:]*returns.iloc[i,:]
        weights_[i] = w/w.sum()
        port_daily_ret[i]=w.sum()

#trades necessary for rebalancing (where positive is buy and negative is sell)
table2 - weights_[9]

#cummulative return of the portfolio
port_daily_ret.cumprod()[-1]
